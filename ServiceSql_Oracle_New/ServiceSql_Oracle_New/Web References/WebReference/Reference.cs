//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ServiceSql_Oracle_New.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WSSoap", Namespace="http://tempuri.org/")]
    public partial class WS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback updatePassOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKHOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDSKH_TRAMOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDSKH_HoaDonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLSTTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrangThaiNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrangThaiNo6ThangOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCP_VCOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCP_CTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLichGCSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLichCDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLichCD_KHOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGiaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGiaThangOperationCompleted;
        
        private System.Threading.SendOrPostCallback DNPC_LCDDaNang_LCDGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback DNPC_LCDDaNang_TTGOperationCompleted;
        
        private System.Threading.SendOrPostCallback DNPC_DiemThuGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback Dnpc_ListDonViOperationCompleted;
        
        private System.Threading.SendOrPostCallback EVNit_LCDDaNang_NgayListOperationCompleted;
        
        private System.Threading.SendOrPostCallback EVNit_LCDDaNang_LCDGetOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTinDNPCOperationCompleted;
        
        private System.Threading.SendOrPostCallback isCoDoXaOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WS() {
            this.Url = global::ServiceSql_Oracle_New.Properties.Settings.Default.ServiceSql_Oracle_New_WebReference_WS;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginAppCompletedEventHandler LoginAppCompleted;
        
        /// <remarks/>
        public event updatePassCompletedEventHandler updatePassCompleted;
        
        /// <remarks/>
        public event GetKHCompletedEventHandler GetKHCompleted;
        
        /// <remarks/>
        public event GetDSKH_TRAMCompletedEventHandler GetDSKH_TRAMCompleted;
        
        /// <remarks/>
        public event GetDSKH_HoaDonCompletedEventHandler GetDSKH_HoaDonCompleted;
        
        /// <remarks/>
        public event GetLSTTCompletedEventHandler GetLSTTCompleted;
        
        /// <remarks/>
        public event GetNoCompletedEventHandler GetNoCompleted;
        
        /// <remarks/>
        public event GetTrangThaiNoCompletedEventHandler GetTrangThaiNoCompleted;
        
        /// <remarks/>
        public event GetTrangThaiNo6ThangCompletedEventHandler GetTrangThaiNo6ThangCompleted;
        
        /// <remarks/>
        public event GetCPCompletedEventHandler GetCPCompleted;
        
        /// <remarks/>
        public event GetCP_VCCompletedEventHandler GetCP_VCCompleted;
        
        /// <remarks/>
        public event GetCP_CTCompletedEventHandler GetCP_CTCompleted;
        
        /// <remarks/>
        public event GetLichGCSCompletedEventHandler GetLichGCSCompleted;
        
        /// <remarks/>
        public event GetLichCDCompletedEventHandler GetLichCDCompleted;
        
        /// <remarks/>
        public event GetLichCD_KHCompletedEventHandler GetLichCD_KHCompleted;
        
        /// <remarks/>
        public event GetGiaCompletedEventHandler GetGiaCompleted;
        
        /// <remarks/>
        public event GetGiaThangCompletedEventHandler GetGiaThangCompleted;
        
        /// <remarks/>
        public event DNPC_LCDDaNang_LCDGetCompletedEventHandler DNPC_LCDDaNang_LCDGetCompleted;
        
        /// <remarks/>
        public event DNPC_LCDDaNang_TTGCompletedEventHandler DNPC_LCDDaNang_TTGCompleted;
        
        /// <remarks/>
        public event DNPC_DiemThuGetCompletedEventHandler DNPC_DiemThuGetCompleted;
        
        /// <remarks/>
        public event Dnpc_ListDonViCompletedEventHandler Dnpc_ListDonViCompleted;
        
        /// <remarks/>
        public event EVNit_LCDDaNang_NgayListCompletedEventHandler EVNit_LCDDaNang_NgayListCompleted;
        
        /// <remarks/>
        public event EVNit_LCDDaNang_LCDGetCompletedEventHandler EVNit_LCDDaNang_LCDGetCompleted;
        
        /// <remarks/>
        public event GetTinDNPCCompletedEventHandler GetTinDNPCCompleted;
        
        /// <remarks/>
        public event isCoDoXaCompletedEventHandler isCoDoXaCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginApp", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoginApp(string bThongTin) {
            object[] results = this.Invoke("LoginApp", new object[] {
                        bThongTin});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAppAsync(string bThongTin) {
            this.LoginAppAsync(bThongTin, null);
        }
        
        /// <remarks/>
        public void LoginAppAsync(string bThongTin, object userState) {
            if ((this.LoginAppOperationCompleted == null)) {
                this.LoginAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginAppOperationCompleted);
            }
            this.InvokeAsync("LoginApp", new object[] {
                        bThongTin}, this.LoginAppOperationCompleted, userState);
        }
        
        private void OnLoginAppOperationCompleted(object arg) {
            if ((this.LoginAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginAppCompleted(this, new LoginAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updatePass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updatePass(string bMaKH, string passwordOld, string passwordNew) {
            object[] results = this.Invoke("updatePass", new object[] {
                        bMaKH,
                        passwordOld,
                        passwordNew});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updatePassAsync(string bMaKH, string passwordOld, string passwordNew) {
            this.updatePassAsync(bMaKH, passwordOld, passwordNew, null);
        }
        
        /// <remarks/>
        public void updatePassAsync(string bMaKH, string passwordOld, string passwordNew, object userState) {
            if ((this.updatePassOperationCompleted == null)) {
                this.updatePassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdatePassOperationCompleted);
            }
            this.InvokeAsync("updatePass", new object[] {
                        bMaKH,
                        passwordOld,
                        passwordNew}, this.updatePassOperationCompleted, userState);
        }
        
        private void OnupdatePassOperationCompleted(object arg) {
            if ((this.updatePassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updatePassCompleted(this, new updatePassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetKH", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetKH(string bMaKH, string password) {
            object[] results = this.Invoke("GetKH", new object[] {
                        bMaKH,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetKHAsync(string bMaKH, string password) {
            this.GetKHAsync(bMaKH, password, null);
        }
        
        /// <remarks/>
        public void GetKHAsync(string bMaKH, string password, object userState) {
            if ((this.GetKHOperationCompleted == null)) {
                this.GetKHOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKHOperationCompleted);
            }
            this.InvokeAsync("GetKH", new object[] {
                        bMaKH,
                        password}, this.GetKHOperationCompleted, userState);
        }
        
        private void OnGetKHOperationCompleted(object arg) {
            if ((this.GetKHCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKHCompleted(this, new GetKHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDSKH_TRAM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDSKH_TRAM(string bMaTram, string password) {
            object[] results = this.Invoke("GetDSKH_TRAM", new object[] {
                        bMaTram,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDSKH_TRAMAsync(string bMaTram, string password) {
            this.GetDSKH_TRAMAsync(bMaTram, password, null);
        }
        
        /// <remarks/>
        public void GetDSKH_TRAMAsync(string bMaTram, string password, object userState) {
            if ((this.GetDSKH_TRAMOperationCompleted == null)) {
                this.GetDSKH_TRAMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDSKH_TRAMOperationCompleted);
            }
            this.InvokeAsync("GetDSKH_TRAM", new object[] {
                        bMaTram,
                        password}, this.GetDSKH_TRAMOperationCompleted, userState);
        }
        
        private void OnGetDSKH_TRAMOperationCompleted(object arg) {
            if ((this.GetDSKH_TRAMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDSKH_TRAMCompleted(this, new GetDSKH_TRAMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDSKH_HoaDon", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDSKH_HoaDon(string bMaSoGCS, int bKy, int bThang, int bNam, string password) {
            object[] results = this.Invoke("GetDSKH_HoaDon", new object[] {
                        bMaSoGCS,
                        bKy,
                        bThang,
                        bNam,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDSKH_HoaDonAsync(string bMaSoGCS, int bKy, int bThang, int bNam, string password) {
            this.GetDSKH_HoaDonAsync(bMaSoGCS, bKy, bThang, bNam, password, null);
        }
        
        /// <remarks/>
        public void GetDSKH_HoaDonAsync(string bMaSoGCS, int bKy, int bThang, int bNam, string password, object userState) {
            if ((this.GetDSKH_HoaDonOperationCompleted == null)) {
                this.GetDSKH_HoaDonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDSKH_HoaDonOperationCompleted);
            }
            this.InvokeAsync("GetDSKH_HoaDon", new object[] {
                        bMaSoGCS,
                        bKy,
                        bThang,
                        bNam,
                        password}, this.GetDSKH_HoaDonOperationCompleted, userState);
        }
        
        private void OnGetDSKH_HoaDonOperationCompleted(object arg) {
            if ((this.GetDSKH_HoaDonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDSKH_HoaDonCompleted(this, new GetDSKH_HoaDonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLSTT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLSTT(string bMaKH, int bThang, int bNam, string password) {
            object[] results = this.Invoke("GetLSTT", new object[] {
                        bMaKH,
                        bThang,
                        bNam,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLSTTAsync(string bMaKH, int bThang, int bNam, string password) {
            this.GetLSTTAsync(bMaKH, bThang, bNam, password, null);
        }
        
        /// <remarks/>
        public void GetLSTTAsync(string bMaKH, int bThang, int bNam, string password, object userState) {
            if ((this.GetLSTTOperationCompleted == null)) {
                this.GetLSTTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLSTTOperationCompleted);
            }
            this.InvokeAsync("GetLSTT", new object[] {
                        bMaKH,
                        bThang,
                        bNam,
                        password}, this.GetLSTTOperationCompleted, userState);
        }
        
        private void OnGetLSTTOperationCompleted(object arg) {
            if ((this.GetLSTTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLSTTCompleted(this, new GetLSTTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNo(string bMaKH, string password) {
            object[] results = this.Invoke("GetNo", new object[] {
                        bMaKH,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNoAsync(string bMaKH, string password) {
            this.GetNoAsync(bMaKH, password, null);
        }
        
        /// <remarks/>
        public void GetNoAsync(string bMaKH, string password, object userState) {
            if ((this.GetNoOperationCompleted == null)) {
                this.GetNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNoOperationCompleted);
            }
            this.InvokeAsync("GetNo", new object[] {
                        bMaKH,
                        password}, this.GetNoOperationCompleted, userState);
        }
        
        private void OnGetNoOperationCompleted(object arg) {
            if ((this.GetNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNoCompleted(this, new GetNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTrangThaiNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTrangThaiNo(string bMaKH, string bThang, string bNam, string bKy, string password) {
            object[] results = this.Invoke("GetTrangThaiNo", new object[] {
                        bMaKH,
                        bThang,
                        bNam,
                        bKy,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrangThaiNoAsync(string bMaKH, string bThang, string bNam, string bKy, string password) {
            this.GetTrangThaiNoAsync(bMaKH, bThang, bNam, bKy, password, null);
        }
        
        /// <remarks/>
        public void GetTrangThaiNoAsync(string bMaKH, string bThang, string bNam, string bKy, string password, object userState) {
            if ((this.GetTrangThaiNoOperationCompleted == null)) {
                this.GetTrangThaiNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrangThaiNoOperationCompleted);
            }
            this.InvokeAsync("GetTrangThaiNo", new object[] {
                        bMaKH,
                        bThang,
                        bNam,
                        bKy,
                        password}, this.GetTrangThaiNoOperationCompleted, userState);
        }
        
        private void OnGetTrangThaiNoOperationCompleted(object arg) {
            if ((this.GetTrangThaiNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrangThaiNoCompleted(this, new GetTrangThaiNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTrangThaiNo6Thang", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTrangThaiNo6Thang(string bMaKH, string password) {
            object[] results = this.Invoke("GetTrangThaiNo6Thang", new object[] {
                        bMaKH,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrangThaiNo6ThangAsync(string bMaKH, string password) {
            this.GetTrangThaiNo6ThangAsync(bMaKH, password, null);
        }
        
        /// <remarks/>
        public void GetTrangThaiNo6ThangAsync(string bMaKH, string password, object userState) {
            if ((this.GetTrangThaiNo6ThangOperationCompleted == null)) {
                this.GetTrangThaiNo6ThangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrangThaiNo6ThangOperationCompleted);
            }
            this.InvokeAsync("GetTrangThaiNo6Thang", new object[] {
                        bMaKH,
                        password}, this.GetTrangThaiNo6ThangOperationCompleted, userState);
        }
        
        private void OnGetTrangThaiNo6ThangOperationCompleted(object arg) {
            if ((this.GetTrangThaiNo6ThangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrangThaiNo6ThangCompleted(this, new GetTrangThaiNo6ThangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCP", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCP(string bMaKH, int bThang, int bNam, int bKy, string password) {
            object[] results = this.Invoke("GetCP", new object[] {
                        bMaKH,
                        bThang,
                        bNam,
                        bKy,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCPAsync(string bMaKH, int bThang, int bNam, int bKy, string password) {
            this.GetCPAsync(bMaKH, bThang, bNam, bKy, password, null);
        }
        
        /// <remarks/>
        public void GetCPAsync(string bMaKH, int bThang, int bNam, int bKy, string password, object userState) {
            if ((this.GetCPOperationCompleted == null)) {
                this.GetCPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCPOperationCompleted);
            }
            this.InvokeAsync("GetCP", new object[] {
                        bMaKH,
                        bThang,
                        bNam,
                        bKy,
                        password}, this.GetCPOperationCompleted, userState);
        }
        
        private void OnGetCPOperationCompleted(object arg) {
            if ((this.GetCPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCPCompleted(this, new GetCPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCP_VC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCP_VC(string bMaKH, int bThang, int bNam, int bKy, string password) {
            object[] results = this.Invoke("GetCP_VC", new object[] {
                        bMaKH,
                        bThang,
                        bNam,
                        bKy,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCP_VCAsync(string bMaKH, int bThang, int bNam, int bKy, string password) {
            this.GetCP_VCAsync(bMaKH, bThang, bNam, bKy, password, null);
        }
        
        /// <remarks/>
        public void GetCP_VCAsync(string bMaKH, int bThang, int bNam, int bKy, string password, object userState) {
            if ((this.GetCP_VCOperationCompleted == null)) {
                this.GetCP_VCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCP_VCOperationCompleted);
            }
            this.InvokeAsync("GetCP_VC", new object[] {
                        bMaKH,
                        bThang,
                        bNam,
                        bKy,
                        password}, this.GetCP_VCOperationCompleted, userState);
        }
        
        private void OnGetCP_VCOperationCompleted(object arg) {
            if ((this.GetCP_VCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCP_VCCompleted(this, new GetCP_VCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCP_CT", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCP_CT(string bMaKH, int bThang, int bNam, string password) {
            object[] results = this.Invoke("GetCP_CT", new object[] {
                        bMaKH,
                        bThang,
                        bNam,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCP_CTAsync(string bMaKH, int bThang, int bNam, string password) {
            this.GetCP_CTAsync(bMaKH, bThang, bNam, password, null);
        }
        
        /// <remarks/>
        public void GetCP_CTAsync(string bMaKH, int bThang, int bNam, string password, object userState) {
            if ((this.GetCP_CTOperationCompleted == null)) {
                this.GetCP_CTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCP_CTOperationCompleted);
            }
            this.InvokeAsync("GetCP_CT", new object[] {
                        bMaKH,
                        bThang,
                        bNam,
                        password}, this.GetCP_CTOperationCompleted, userState);
        }
        
        private void OnGetCP_CTOperationCompleted(object arg) {
            if ((this.GetCP_CTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCP_CTCompleted(this, new GetCP_CTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLichGCS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLichGCS(string bMaKH, int bThang, int bNam, string password) {
            object[] results = this.Invoke("GetLichGCS", new object[] {
                        bMaKH,
                        bThang,
                        bNam,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLichGCSAsync(string bMaKH, int bThang, int bNam, string password) {
            this.GetLichGCSAsync(bMaKH, bThang, bNam, password, null);
        }
        
        /// <remarks/>
        public void GetLichGCSAsync(string bMaKH, int bThang, int bNam, string password, object userState) {
            if ((this.GetLichGCSOperationCompleted == null)) {
                this.GetLichGCSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLichGCSOperationCompleted);
            }
            this.InvokeAsync("GetLichGCS", new object[] {
                        bMaKH,
                        bThang,
                        bNam,
                        password}, this.GetLichGCSOperationCompleted, userState);
        }
        
        private void OnGetLichGCSOperationCompleted(object arg) {
            if ((this.GetLichGCSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLichGCSCompleted(this, new GetLichGCSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLichCD", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLichCD(string bTuNgay, string bDenNgay, string password) {
            object[] results = this.Invoke("GetLichCD", new object[] {
                        bTuNgay,
                        bDenNgay,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLichCDAsync(string bTuNgay, string bDenNgay, string password) {
            this.GetLichCDAsync(bTuNgay, bDenNgay, password, null);
        }
        
        /// <remarks/>
        public void GetLichCDAsync(string bTuNgay, string bDenNgay, string password, object userState) {
            if ((this.GetLichCDOperationCompleted == null)) {
                this.GetLichCDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLichCDOperationCompleted);
            }
            this.InvokeAsync("GetLichCD", new object[] {
                        bTuNgay,
                        bDenNgay,
                        password}, this.GetLichCDOperationCompleted, userState);
        }
        
        private void OnGetLichCDOperationCompleted(object arg) {
            if ((this.GetLichCDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLichCDCompleted(this, new GetLichCDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetLichCD_KH", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLichCD_KH(string bMaKH, string bTuNgay, string bDenNgay, string password) {
            object[] results = this.Invoke("GetLichCD_KH", new object[] {
                        bMaKH,
                        bTuNgay,
                        bDenNgay,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLichCD_KHAsync(string bMaKH, string bTuNgay, string bDenNgay, string password) {
            this.GetLichCD_KHAsync(bMaKH, bTuNgay, bDenNgay, password, null);
        }
        
        /// <remarks/>
        public void GetLichCD_KHAsync(string bMaKH, string bTuNgay, string bDenNgay, string password, object userState) {
            if ((this.GetLichCD_KHOperationCompleted == null)) {
                this.GetLichCD_KHOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLichCD_KHOperationCompleted);
            }
            this.InvokeAsync("GetLichCD_KH", new object[] {
                        bMaKH,
                        bTuNgay,
                        bDenNgay,
                        password}, this.GetLichCD_KHOperationCompleted, userState);
        }
        
        private void OnGetLichCD_KHOperationCompleted(object arg) {
            if ((this.GetLichCD_KHCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLichCD_KHCompleted(this, new GetLichCD_KHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGia", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGia(string bMaKH, string password) {
            object[] results = this.Invoke("GetGia", new object[] {
                        bMaKH,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGiaAsync(string bMaKH, string password) {
            this.GetGiaAsync(bMaKH, password, null);
        }
        
        /// <remarks/>
        public void GetGiaAsync(string bMaKH, string password, object userState) {
            if ((this.GetGiaOperationCompleted == null)) {
                this.GetGiaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGiaOperationCompleted);
            }
            this.InvokeAsync("GetGia", new object[] {
                        bMaKH,
                        password}, this.GetGiaOperationCompleted, userState);
        }
        
        private void OnGetGiaOperationCompleted(object arg) {
            if ((this.GetGiaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGiaCompleted(this, new GetGiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetGiaThang", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetGiaThang(string bMaKH, int bThang, int bNam, string password) {
            object[] results = this.Invoke("GetGiaThang", new object[] {
                        bMaKH,
                        bThang,
                        bNam,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetGiaThangAsync(string bMaKH, int bThang, int bNam, string password) {
            this.GetGiaThangAsync(bMaKH, bThang, bNam, password, null);
        }
        
        /// <remarks/>
        public void GetGiaThangAsync(string bMaKH, int bThang, int bNam, string password, object userState) {
            if ((this.GetGiaThangOperationCompleted == null)) {
                this.GetGiaThangOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGiaThangOperationCompleted);
            }
            this.InvokeAsync("GetGiaThang", new object[] {
                        bMaKH,
                        bThang,
                        bNam,
                        password}, this.GetGiaThangOperationCompleted, userState);
        }
        
        private void OnGetGiaThangOperationCompleted(object arg) {
            if ((this.GetGiaThangCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGiaThangCompleted(this, new GetGiaThangCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DNPC_LCDDaNang_LCDGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DNPC_LCDDaNang_LCDGet(string bTuNgay, string bDenNgay, string bMaTram, string password) {
            object[] results = this.Invoke("DNPC_LCDDaNang_LCDGet", new object[] {
                        bTuNgay,
                        bDenNgay,
                        bMaTram,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DNPC_LCDDaNang_LCDGetAsync(string bTuNgay, string bDenNgay, string bMaTram, string password) {
            this.DNPC_LCDDaNang_LCDGetAsync(bTuNgay, bDenNgay, bMaTram, password, null);
        }
        
        /// <remarks/>
        public void DNPC_LCDDaNang_LCDGetAsync(string bTuNgay, string bDenNgay, string bMaTram, string password, object userState) {
            if ((this.DNPC_LCDDaNang_LCDGetOperationCompleted == null)) {
                this.DNPC_LCDDaNang_LCDGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDNPC_LCDDaNang_LCDGetOperationCompleted);
            }
            this.InvokeAsync("DNPC_LCDDaNang_LCDGet", new object[] {
                        bTuNgay,
                        bDenNgay,
                        bMaTram,
                        password}, this.DNPC_LCDDaNang_LCDGetOperationCompleted, userState);
        }
        
        private void OnDNPC_LCDDaNang_LCDGetOperationCompleted(object arg) {
            if ((this.DNPC_LCDDaNang_LCDGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DNPC_LCDDaNang_LCDGetCompleted(this, new DNPC_LCDDaNang_LCDGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DNPC_LCDDaNang_TTG", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DNPC_LCDDaNang_TTG(string bTuNgay, string bDenNgay, string bMaTram, string password) {
            object[] results = this.Invoke("DNPC_LCDDaNang_TTG", new object[] {
                        bTuNgay,
                        bDenNgay,
                        bMaTram,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DNPC_LCDDaNang_TTGAsync(string bTuNgay, string bDenNgay, string bMaTram, string password) {
            this.DNPC_LCDDaNang_TTGAsync(bTuNgay, bDenNgay, bMaTram, password, null);
        }
        
        /// <remarks/>
        public void DNPC_LCDDaNang_TTGAsync(string bTuNgay, string bDenNgay, string bMaTram, string password, object userState) {
            if ((this.DNPC_LCDDaNang_TTGOperationCompleted == null)) {
                this.DNPC_LCDDaNang_TTGOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDNPC_LCDDaNang_TTGOperationCompleted);
            }
            this.InvokeAsync("DNPC_LCDDaNang_TTG", new object[] {
                        bTuNgay,
                        bDenNgay,
                        bMaTram,
                        password}, this.DNPC_LCDDaNang_TTGOperationCompleted, userState);
        }
        
        private void OnDNPC_LCDDaNang_TTGOperationCompleted(object arg) {
            if ((this.DNPC_LCDDaNang_TTGCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DNPC_LCDDaNang_TTGCompleted(this, new DNPC_LCDDaNang_TTGCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DNPC_DiemThuGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DNPC_DiemThuGet(string bMaDV, string password) {
            object[] results = this.Invoke("DNPC_DiemThuGet", new object[] {
                        bMaDV,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DNPC_DiemThuGetAsync(string bMaDV, string password) {
            this.DNPC_DiemThuGetAsync(bMaDV, password, null);
        }
        
        /// <remarks/>
        public void DNPC_DiemThuGetAsync(string bMaDV, string password, object userState) {
            if ((this.DNPC_DiemThuGetOperationCompleted == null)) {
                this.DNPC_DiemThuGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDNPC_DiemThuGetOperationCompleted);
            }
            this.InvokeAsync("DNPC_DiemThuGet", new object[] {
                        bMaDV,
                        password}, this.DNPC_DiemThuGetOperationCompleted, userState);
        }
        
        private void OnDNPC_DiemThuGetOperationCompleted(object arg) {
            if ((this.DNPC_DiemThuGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DNPC_DiemThuGetCompleted(this, new DNPC_DiemThuGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Dnpc_ListDonVi", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Dnpc_ListDonVi(string password) {
            object[] results = this.Invoke("Dnpc_ListDonVi", new object[] {
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Dnpc_ListDonViAsync(string password) {
            this.Dnpc_ListDonViAsync(password, null);
        }
        
        /// <remarks/>
        public void Dnpc_ListDonViAsync(string password, object userState) {
            if ((this.Dnpc_ListDonViOperationCompleted == null)) {
                this.Dnpc_ListDonViOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDnpc_ListDonViOperationCompleted);
            }
            this.InvokeAsync("Dnpc_ListDonVi", new object[] {
                        password}, this.Dnpc_ListDonViOperationCompleted, userState);
        }
        
        private void OnDnpc_ListDonViOperationCompleted(object arg) {
            if ((this.Dnpc_ListDonViCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Dnpc_ListDonViCompleted(this, new Dnpc_ListDonViCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EVNit_LCDDaNang_NgayList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EVNit_LCDDaNang_NgayList(string password) {
            object[] results = this.Invoke("EVNit_LCDDaNang_NgayList", new object[] {
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EVNit_LCDDaNang_NgayListAsync(string password) {
            this.EVNit_LCDDaNang_NgayListAsync(password, null);
        }
        
        /// <remarks/>
        public void EVNit_LCDDaNang_NgayListAsync(string password, object userState) {
            if ((this.EVNit_LCDDaNang_NgayListOperationCompleted == null)) {
                this.EVNit_LCDDaNang_NgayListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEVNit_LCDDaNang_NgayListOperationCompleted);
            }
            this.InvokeAsync("EVNit_LCDDaNang_NgayList", new object[] {
                        password}, this.EVNit_LCDDaNang_NgayListOperationCompleted, userState);
        }
        
        private void OnEVNit_LCDDaNang_NgayListOperationCompleted(object arg) {
            if ((this.EVNit_LCDDaNang_NgayListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EVNit_LCDDaNang_NgayListCompleted(this, new EVNit_LCDDaNang_NgayListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EVNit_LCDDaNang_LCDGet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string EVNit_LCDDaNang_LCDGet(string bNgay, string password) {
            object[] results = this.Invoke("EVNit_LCDDaNang_LCDGet", new object[] {
                        bNgay,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void EVNit_LCDDaNang_LCDGetAsync(string bNgay, string password) {
            this.EVNit_LCDDaNang_LCDGetAsync(bNgay, password, null);
        }
        
        /// <remarks/>
        public void EVNit_LCDDaNang_LCDGetAsync(string bNgay, string password, object userState) {
            if ((this.EVNit_LCDDaNang_LCDGetOperationCompleted == null)) {
                this.EVNit_LCDDaNang_LCDGetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEVNit_LCDDaNang_LCDGetOperationCompleted);
            }
            this.InvokeAsync("EVNit_LCDDaNang_LCDGet", new object[] {
                        bNgay,
                        password}, this.EVNit_LCDDaNang_LCDGetOperationCompleted, userState);
        }
        
        private void OnEVNit_LCDDaNang_LCDGetOperationCompleted(object arg) {
            if ((this.EVNit_LCDDaNang_LCDGetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EVNit_LCDDaNang_LCDGetCompleted(this, new EVNit_LCDDaNang_LCDGetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTinDNPC", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetTinDNPC(string password) {
            object[] results = this.Invoke("GetTinDNPC", new object[] {
                        password});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetTinDNPCAsync(string password) {
            this.GetTinDNPCAsync(password, null);
        }
        
        /// <remarks/>
        public void GetTinDNPCAsync(string password, object userState) {
            if ((this.GetTinDNPCOperationCompleted == null)) {
                this.GetTinDNPCOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTinDNPCOperationCompleted);
            }
            this.InvokeAsync("GetTinDNPC", new object[] {
                        password}, this.GetTinDNPCOperationCompleted, userState);
        }
        
        private void OnGetTinDNPCOperationCompleted(object arg) {
            if ((this.GetTinDNPCCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTinDNPCCompleted(this, new GetTinDNPCCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/isCoDoXa", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool isCoDoXa(string bMaKH) {
            object[] results = this.Invoke("isCoDoXa", new object[] {
                        bMaKH});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void isCoDoXaAsync(string bMaKH) {
            this.isCoDoXaAsync(bMaKH, null);
        }
        
        /// <remarks/>
        public void isCoDoXaAsync(string bMaKH, object userState) {
            if ((this.isCoDoXaOperationCompleted == null)) {
                this.isCoDoXaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnisCoDoXaOperationCompleted);
            }
            this.InvokeAsync("isCoDoXa", new object[] {
                        bMaKH}, this.isCoDoXaOperationCompleted, userState);
        }
        
        private void OnisCoDoXaOperationCompleted(object arg) {
            if ((this.isCoDoXaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.isCoDoXaCompleted(this, new isCoDoXaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void LoginAppCompletedEventHandler(object sender, LoginAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void updatePassCompletedEventHandler(object sender, updatePassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updatePassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updatePassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void GetKHCompletedEventHandler(object sender, GetKHCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKHCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKHCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void GetDSKH_TRAMCompletedEventHandler(object sender, GetDSKH_TRAMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDSKH_TRAMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDSKH_TRAMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void GetDSKH_HoaDonCompletedEventHandler(object sender, GetDSKH_HoaDonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDSKH_HoaDonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDSKH_HoaDonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void GetLSTTCompletedEventHandler(object sender, GetLSTTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLSTTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLSTTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void GetNoCompletedEventHandler(object sender, GetNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void GetTrangThaiNoCompletedEventHandler(object sender, GetTrangThaiNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrangThaiNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrangThaiNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void GetTrangThaiNo6ThangCompletedEventHandler(object sender, GetTrangThaiNo6ThangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrangThaiNo6ThangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrangThaiNo6ThangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void GetCPCompletedEventHandler(object sender, GetCPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void GetCP_VCCompletedEventHandler(object sender, GetCP_VCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCP_VCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCP_VCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void GetCP_CTCompletedEventHandler(object sender, GetCP_CTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCP_CTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCP_CTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void GetLichGCSCompletedEventHandler(object sender, GetLichGCSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLichGCSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLichGCSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void GetLichCDCompletedEventHandler(object sender, GetLichCDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLichCDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLichCDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void GetLichCD_KHCompletedEventHandler(object sender, GetLichCD_KHCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLichCD_KHCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLichCD_KHCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void GetGiaCompletedEventHandler(object sender, GetGiaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGiaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGiaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void GetGiaThangCompletedEventHandler(object sender, GetGiaThangCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGiaThangCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGiaThangCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void DNPC_LCDDaNang_LCDGetCompletedEventHandler(object sender, DNPC_LCDDaNang_LCDGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DNPC_LCDDaNang_LCDGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DNPC_LCDDaNang_LCDGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void DNPC_LCDDaNang_TTGCompletedEventHandler(object sender, DNPC_LCDDaNang_TTGCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DNPC_LCDDaNang_TTGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DNPC_LCDDaNang_TTGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void DNPC_DiemThuGetCompletedEventHandler(object sender, DNPC_DiemThuGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DNPC_DiemThuGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DNPC_DiemThuGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void Dnpc_ListDonViCompletedEventHandler(object sender, Dnpc_ListDonViCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Dnpc_ListDonViCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Dnpc_ListDonViCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void EVNit_LCDDaNang_NgayListCompletedEventHandler(object sender, EVNit_LCDDaNang_NgayListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EVNit_LCDDaNang_NgayListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EVNit_LCDDaNang_NgayListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void EVNit_LCDDaNang_LCDGetCompletedEventHandler(object sender, EVNit_LCDDaNang_LCDGetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EVNit_LCDDaNang_LCDGetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EVNit_LCDDaNang_LCDGetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void GetTinDNPCCompletedEventHandler(object sender, GetTinDNPCCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTinDNPCCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTinDNPCCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    public delegate void isCoDoXaCompletedEventHandler(object sender, isCoDoXaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1532.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class isCoDoXaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal isCoDoXaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591